require("dotenv").config();
const express = require("express");
const cors = require("cors");
const morgan = require("morgan");
const session = require("express-session");
const MongoStore = require("connect-mongo");
const methodOverride = require("method-override");
const path = require("path");
const errorHandler = require("./middleware/errorHandler");

// üìå –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤
const authRoutes = require("./routes/authRoutes");
const userRoutes = require("./routes/userRoutes");
const resourceRoutes = require("./routes/resourceRoutes");
const mainRoutes = require("./routes/mainRoutes");

const app = express();

// üìå –û—Å–Ω–æ–≤–Ω—ã–µ middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(cors({ origin: process.env.FRONTEND_URL || "*", credentials: true })); // –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã —Å —Ñ—Ä–æ–Ω—Ç–∞
app.use(morgan("dev"));
app.use(methodOverride("_method"));

// üìå –°–µ—Å—Å–∏–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π MongoDB Atlas
app.use(
    session({
        secret: process.env.SESSION_SECRET || "supersecret",
        resave: false,
        saveUninitialized: false,
        store: MongoStore.create({ 
            mongoUrl: process.env.MONGO_URI, 
            collectionName: "sessions" 
        }),
        cookie: { 
            secure: process.env.NODE_ENV === "production", // –í–∫–ª—é—á–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
            httpOnly: true, 
            maxAge: 1000 * 60 * 60 * 24 // 1 –¥–µ–Ω—å
        }
    })
);

// üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤ –∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
app.set("view engine", "ejs");
app.set("views", path.join(__dirname, "views"));
app.use(express.static(path.join(__dirname, "public")));

// üìå –û—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
app.use(mainRoutes);
app.use(authRoutes);
app.use(userRoutes);
app.use(resourceRoutes);

// üìå –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use(errorHandler);
app.use((err, req, res, next) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", err.stack);
    res.status(500).json({ error: "Internal Server Error" });
});

module.exports = app;
